@use 'sass:math';
@tailwind base;
@tailwind components;
@tailwind utilities;
:root {
    background-color: white;
    color: black;
}

body {
    margin: 0;
    overflow: hidden;
}

//background
.background {
    position: absolute;
    width: 100vw;
    height: 100vh;
    background: white;
    z-index: -2;
}

$particleSize: 20vmin;
$animationDuration: 6s;
$amount: 20;
$colors: (red, indigo, yellow, green, blue, orange, violet);
.background span {
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: absolute;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    @for $i from 1 through $amount {
        &:nth-child(#{$i}) {
            color: nth($colors, random(length($colors)));
            top: random(100) * 1%;
            left: random(100) * 1%;
            animation-duration: math.div(math.random(math.div($animationDuration, 1s) * 10), 10) * 1s + 10s;
            animation-delay: math.div(math.random(math.div($animationDuration + 10s, 1s) * 10), 10) * -1s;
            transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
            $blurRadius: (random() + 0.5) * $particleSize * 0.1;
            $x: if(random() > 0.5, -1, 1);
            box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
        }
    }
}

@keyframes move {
    100% {
        transform: translate3d(0, 0, 1px) rotate(360deg);
        
    }
}